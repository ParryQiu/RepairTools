<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4QAAAABJRU5ErkJggg==
</value>
  </data>
</root>